# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ehci_pci" "ahci" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  # For nic e1000e issue per
  # https://serverfault.com/questions/193114/linux-e1000e-intel-networking-driver-problems-galore-where-do-i-start/219658#219658
  boot.kernelParams = [ "pcie_aspm=off" ];
  networking.localCommands = ''
    # The commands will run at the end of network setup
    #
    # Note that it is very unfortunate we cannot use good features such as gso/gro/tso to offload
    # the burdens from CPU to the NIC, but this actually get things running which is good for now.
    ${pkgs.ethtool}/bin/ethtool -K eno1 gso off gro off tso off
  '';

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/50becea5-6f4c-4ac8-86a3-9ae65bbf6402";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/EAB8-3070";
      fsType = "vfat";
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/3964a4c1-9d7a-462d-8d2c-374775fc4f1c"; }
    ];

  powerManagement.cpuFreqGovernor = lib.mkDefault "performance";
}
